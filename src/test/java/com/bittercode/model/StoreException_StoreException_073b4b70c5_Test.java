// Test generated by RoostGPT for test onlineBookStore using AI Type Open AI and AI Model gpt-4

package com.bittercode.model;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import com.bittercode.constant.ResponseCode;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class StoreException_StoreException_073b4b70c5_Test {

    private ResponseCode responseCode;
    private StoreException storeException;

    @BeforeEach
    public void setup() {
        responseCode = mock(ResponseCode.class);
    }

    @Test
    public void testStoreException_Success() {
        when(responseCode.getCode()).thenReturn(200);
        when(responseCode.getMessage()).thenReturn("Success");
        when(responseCode.name()).thenReturn("SUCCESS");

        storeException = new StoreException(responseCode);

        assertEquals(200, storeException.getStatusCode());
        assertEquals("Success", storeException.getErrorMessage());
        assertEquals("SUCCESS", storeException.getErrorCode());
    }

    @Test
    public void testStoreException_Failure() {
        when(responseCode.getCode()).thenReturn(400);
        when(responseCode.getMessage()).thenReturn("Bad Request");
        when(responseCode.name()).thenReturn("BAD_REQUEST");

        storeException = new StoreException(responseCode);

        assertEquals(400, storeException.getStatusCode());
        assertEquals("Bad Request", storeException.getErrorMessage());
        assertEquals("BAD_REQUEST", storeException.getErrorCode());
    }
}
